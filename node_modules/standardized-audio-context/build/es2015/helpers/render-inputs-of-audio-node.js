import { getAudioNodeConnections } from '../helpers/get-audio-node-connections';
import { getAudioNodeRenderer } from '../helpers/get-audio-node-renderer';
export const renderInputsOfAudioNode = (audioNode, offlineAudioContext, nativeAudioNode) => {
    const audioNodeConnections = getAudioNodeConnections(audioNode);
    return Promise
        .all(audioNodeConnections.inputs
        .map((connections, input) => Array
        .from(connections.values())
        .map(([source, output]) => getAudioNodeRenderer(source)
        .render(source, offlineAudioContext)
        .then((node) => node.connect(nativeAudioNode, output, input))))
        .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));
};
//# sourceMappingURL=/build/es2015/helpers/render-inputs-of-audio-node.js.map