import { createInvalidStateError } from '../factories/invalid-state-error';
export const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (audioBufferSourceNode) => {
    audioBufferSourceNode.start = ((start) => {
        let isScheduled = false;
        return (when = 0, offset = 0, duration) => {
            if (isScheduled) {
                throw createInvalidStateError();
            }
            start.call(audioBufferSourceNode, when, offset, duration);
            isScheduled = true;
        };
    })(audioBufferSourceNode.start);
};
//# sourceMappingURL=/build/es2015/wrappers/audio-buffer-source-node-start-method-consecutive-calls.js.map